{"version":3,"sources":["scripts/main.js"],"names":["user","document","querySelectorAll","sortList","list","bod","querySelector","remove","userUlNew","createElement","result","sort","a","b","dataset","salary","slice","split","join","innerHTML","map","text","textContent","append","getEmployees","forEach","employee","resultUser","nameEmployee","innerText","index","replace","indexOf","name","position","age","push"],"mappings":";AAAA,aAgDA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA9CA,IAAMA,EAAOC,SAASC,iBAAiB,MAEvC,SAASC,EAASC,GACVC,IAAAA,EAAMJ,SAASK,cAAc,QACpBL,SAASK,cAAc,MAE/BC,SAEDC,IAAAA,EAAYP,SAASQ,cAAc,OAEnCC,EAAS,EAAIN,GAAMO,KAAK,SAACC,EAAGC,GAChCA,OAAAA,EAAEC,QAAQC,OAAOC,MAAM,GAAGC,MAAM,KAAKC,KAAK,IACvCN,EAAEE,QAAQC,OAAOC,MAAM,GAAGC,MAAM,KAAKC,KAAK,MAE/CV,EAAUW,UAERT,eAAAA,OAAAA,EAAOU,IAAI,SAAAC,GAAgBA,MAAAA,QAAAA,OAAAA,EAAKC,YAAjB,WAAqCJ,KAAK,IAF3D,iBAKAb,EAAIkB,OAAOf,GAGb,SAASgB,EAAapB,GACdM,IAAAA,EAAS,GAmBRA,OAjBPN,EAAKqB,QAAQ,SAACC,GACNC,IAAAA,EAAa,GACfC,EAAeF,EAASG,UAMtBC,GAFNF,GAFAA,EAAeA,EAAaG,QAAQ,SAAU,KAElBA,QAAQ,WAAY,KAErBC,QAAQ,KAEnCL,EAAWM,KAAOL,EAAaZ,MAAM,EAAGc,GACxCH,EAAWO,SAAWR,EAASZ,QAAQoB,SACvCP,EAAWZ,OAASW,EAASZ,QAAQC,OACrCY,EAAWQ,IAAMT,EAASZ,QAAQqB,IAClCzB,EAAO0B,KAAKT,KAGPjB,EAGTP,EAASH,GACTwB,EAAaxB","file":"main.9e9c3ba1.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst user = document.querySelectorAll('li');\n\nfunction sortList(list) {\n  const bod = document.querySelector('body');\n  const userUl = document.querySelector('ul');\n\n  userUl.remove();\n\n  const userUlNew = document.createElement('div');\n\n  const result = [...list].sort((a, b) =>\n    b.dataset.salary.slice(1).split(',').join('')\n     - a.dataset.salary.slice(1).split(',').join(''));\n\n  userUlNew.innerHTML = `\n  <ul>\n  ${result.map(text => `<li> ${text.textContent}</li>`).join('')}\n  </ul>\n  `;\n  bod.append(userUlNew);\n}\n\nfunction getEmployees(list) {\n  const result = [];\n\n  list.forEach((employee) => {\n    const resultUser = {};\n    let nameEmployee = employee.innerText;\n\n    nameEmployee = nameEmployee.replace(/\\r|\\n/g, '');\n\n    nameEmployee = nameEmployee.replace('        ', '');\n\n    const index = nameEmployee.indexOf(' ');\n\n    resultUser.name = nameEmployee.slice(0, index);\n    resultUser.position = employee.dataset.position;\n    resultUser.salary = employee.dataset.salary;\n    resultUser.age = employee.dataset.age;\n    result.push(resultUser);\n  });\n\n  return result;\n}\n\nsortList(user);\ngetEmployees(user);\n"]}